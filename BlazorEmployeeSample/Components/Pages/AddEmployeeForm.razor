@page "/add"
@using BlazorEmployeeSample.Models
@using BlazorEmployeeSample.DataAccess
@inject IEmployeeRepository EmployeeRepository
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Add Employee</PageTitle>

<h1>Add Employee</h1>

@if (Employee != null)
{
    <div class="container-sm py-5">
        <EditForm Model="Employee" OnValidSubmit="async () => await Save()">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <form class="row g-3 p-2">
                <div class="row">
                    <div class="col-md-6">
                        <label for="firstName">First Name</label>
                        <InputText id="firstName" class="form-control" @bind-Value="Employee.FirstName"/>
                    </div>
                    <div class="col-md-6">
                        <label for="lastName">Last Name</label>
                        <InputText id="lastName" class="form-control" @bind-Value="Employee.LastName"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label for="jobTitle">Job Title</label>
                        <InputText id="jobTitle" class="form-control" @bind-Value="Employee.JobTitle"/>
                    </div>
                    <div class="col-md-6">
                        <label for="hireDate">Hire Date</label>
                        <InputDate id="hireDate" class="form-control" @bind-Value="Employee.HireDate"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label for="address1">Address 1</label>
                        <InputText id="address1" class="form-control" @bind-Value="Employee.Address.Address1"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label for="address2">Address 2</label>
                        <InputText id="address2" class="form-control" @bind-Value="Employee.Address.Address2"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label for="city">City</label>
                        <InputText id="city" class="form-control" @bind-Value="Employee.Address.AddressCity"/>
                    </div>
                    <div class="col-md-6">
                        <label for="state">State</label>
                        <InputText id="state" class="form-control" @bind-Value="Employee.Address.AddressState"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label for="zip">Zip Code</label>
                        <InputText id="zip" class="form-control" @bind-Value="Employee.Address.AddressZip"/>
                    </div>
                </div>
            </form>
            <button class="btn btn-primary" type="submit">Save</button>
            <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </EditForm>
    </div>
}
else
{
    <p>
        <em>Loading...</em>
    </p>
}
@if (IsError)
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}


@code {

    private Employee? Employee { get; set; } = new();

    private bool IsError { get; set; }

    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employee = new Employee();
        Employee.Addresses.Add(new Address());
        await base.OnInitializedAsync();
    }

    private async Task Save()
    {
        try
        {
            if (Employee != null) await EmployeeRepository.AddEmployeeAsync(Employee);
            Navigation.NavigateTo("/", true);
        } catch (Exception ex)
        {
            IsError = true;
            ErrorMessage = ex.Message;
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/", true);
    }

}